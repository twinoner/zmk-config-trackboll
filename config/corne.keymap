/*
 * Copyright (c) 2021 The ZMK Contributors
 * #include <dt-bindings/zmk/pointing.h>
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/trackball_pim447.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPSLOCK  &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y    &kp U   &kp I          &kp O    &kp P     &kp BSPC
&kp LSHFT     &kp A  &kp S  &kp D     &kp F   &kp G        &kp H    &kp J   &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL     &kp Z  &kp X  &kp C     &kp V   &kp B        &kp N    &pim447_scroll_move   &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                            &kp LGUI  &tog 1  &kp SPACE    &kp RET  &tog 2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB    &kp F1   &kp F2   &kp F3        &kp F4            &kp F5               &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp ASTERISK  &kp BSPC
&kp LSHFT  &kp F6   &kp F7   &kp F8        &kp F9            &kp F10              &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_9  &kp MINUS     &kp PLUS
&kp LCTRL  &kp F11  &kp F12  &kp GRAVE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT       &kp EQUAL     &kp ENTER
                             &kp LEFT_ALT  &trans            &kp BSLH             &kp NUMBER_0  &trans        &kp RCTRL
            >;
        };

        raise_layer {
            bindings = <
&kp K_PP           &kp UP      &kp C_STOP       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK    &bt BT_CLR         &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3                      &bt BT_SEL 4
&kp LEFT           &kp DOWN    &kp RIGHT        &kp INS          &kp HOME        &kp PG_UP          &ext_power EP_ON   &ext_power EP_OFF  &ext_power EP_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_COLOR_HSB(66,91,51)   &rgb_ug RGB_COLOR_HSB(99,91,50)
&kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOLUME_UP  &kp DEL          &kp END         &kp PG_DN          &rgb_ug RGB_TOG    &rgb_ug RGB_EFF    &rgb_ug RGB_SPI    &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(240,88,49)  &rgb_ug RGB_COLOR_HSB(0,87,50)
                                                &kp C_PREVIOUS   &trans          &kp C_NEXT         &ext_power EP_OFF  &trans             &out OUT_TOG
            >;
        };

        layer_3 {
            bindings = <
&mkp MB1             &mkp MB2  &mkp MB3  &mkp MB4   &mkp MB5  &trans       &mkp LCLK  &pim447_scroll_move  &mkp RCLK  &trans  &trans  &trans
&pim447_toggle       &trans    &trans    &trans     &trans    &trans       &trans     &mkp MCLK            &trans     &trans  &trans  &trans
&pim447_scroll_move  &trans    &trans    &trans     &trans    &trans       &trans     &trans               &trans     &trans  &trans  &trans
                                         &mkp LCLK  &trans    &mkp RCLK    &trans     &trans               &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        trackball {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
